version: '3.9'

services:
  service_a:
    build:
      context: ./app/service_a
    container_name: service_a
    ports:
      - "8000:8000"
    depends_on:
      service_b:
        condition: service_healthy
    networks:
      - shortener_network

  service_b:
    build:
      context: ./app/service_b
    container_name: service_b
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/shortener
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - shortener_network

  db:
    image: postgres:15
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shortener
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - shortener_network



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - shortener_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana


  jaeger:
    image: jaegertracing/all-in-one:1.41
    container_name: jaeger
    ports:
      - "16686:16686"  # Веб-интерфейс Jaeger
      - "6831:6831/udp"  # Порт для агента Jaeger
      - "6832:6832/udp"
    networks:
      - shortener_network

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - shortener_network
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yml
    networks:
      - shortener_network

networks:
  shortener_network:
    name: shortener_network

volumes:
  db_data:
  grafana_data:

    